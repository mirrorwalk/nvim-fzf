{
  lib,
  config,
  pkgs,
  ...
}: let
  cfg = config.programs.nvim-fzf;

  # Generate config file content
  configFile = pkgs.writeText "nvim-fzf-config" ''
    # Generated by Nix - do not edit manually

    [roots]
    ${lib.concatStringsSep "\n" cfg.roots}

    [ignore]
    ${lib.concatStringsSep "\n" cfg.ignore}
  '';

  nvim-fzf = pkgs.writeShellScriptBin "nvim-fzf" ''
    ${builtins.readFile ./nvim-fzf.sh}
  '';
in {
  options.programs.nvim-fzf = {
    enable = lib.mkEnableOption "nvim-fzf directory picker";

    roots = lib.mkOption {
      type = lib.types.listOf lib.types.str;
      default = [];
      description = "Root directories to search for projects";
    };

    ignore = lib.mkOption {
      type = lib.types.listOf lib.types.str;
      default = [
        ".git"
        "node_modules"
        "target"
        ".direnv"
      ];
      description = "Directory patterns to ignore during search";
    };

    bashKeybind = {
      enable = lib.mkEnableOption "Enable bash integration";
      keybind = lib.mkOption {
        default = "C-g";
        description = "Keybind for bash";
      };
    };
  };

  config = lib.mkIf cfg.enable {
    home.packages = [nvim-fzf];

    home.file.".config/nvim-fzf/config".source = configFile;

    programs.bash = lib.mkIf cfg.bashIntegration.enable {
      initExtra = ''
        bind '"\${cfg.bashIntegration.keybind}":"${nvim-fzf}/bin/nvim-fzf\n"'
      '';
    };
  };
}
